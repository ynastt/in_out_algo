==== IN ALGORITHM ====
size of file: 4

first two digits: 20
first 2 digits: 20
quot and rem: 2, 4
i: 1
next digit: 2
check quot and rem: 2, 4
 next 2 digits: 42
 quot and rem: 5, 2
i: 3
next digit: 3
check quot and rem: 5, 2
 next 2 digits: 23
 quot and rem: 2, 7
current res: 7rkþ~

k: 3
---current number: 252---
old len: 4
len: 3

first 2 digits: 25
quot and rem: 3, 1
i: 1
next digit: 2
check quot and rem: 3, 1
 next 2 digits: 12
 quot and rem: 1, 4
current res: 74kþ~

k: 2
---current number: 31---
old len: 3
len: 2

first 2 digits: 31
quot and rem: 3, 7
i: 1
current res: 747kþ~

k: 1
---current number: 3---
old len: 2
len: 1
last digit: 3
current res: 7473þ~

res: 7473


decimal number: 2023
octal number: 3747
0 - 3
oct: 3; bin: 011
cur res: 011
1 - 7
oct: 7; bin: 111
cur res: 011111
2 - 4
oct: 4; bin: 100
cur res: 011111100
3 - 7
oct: 7; bin: 111
cur res: 011111100111
bin_res: 011111100111

binary: 011111100111
len: 12
2^32:
str: 011111100111
0
2023

2^64:
02023
in algorithm took 0.000113 seconds to execute 

==== OUT ALGORITHM ====

convert_to_binary_>: the start of iteration, was_res = 0x558b1b9ae640

convert_to_binary _>: res = 0x558b1b9ae640

convert_to_binary _>: iteration 0

convert_to_binary _>: digit is: 2023
digit: 2023, ost: 1
digit: 1011, ost: 1
digit: 505, ost: 1
digit: 252, ost: 0
digit: 126, ost: 0
digit: 63, ost: 1
digit: 31, ost: 1
digit: 15, ost: 1
digit: 7, ost: 1
digit: 3, ost: 1
digit: 1, ost: 1
b: 11100111111
current binary is: 11111100111
binary is: 11111100111
current res: 11100111111

convert_to_binary_>: the end of the iteration, l = 0x558b1b9ae540

convert_to_binary_>: the start of iteration, was_res = 0x558b1b9ae640

convert_to_binary _>: res = 0x558b1b9ae700

convert_to_binary _>: iteration 1

convert_to_binary _>: digit is: 0
current res: 111001111110

convert_to_binary_>: the end of the iteration, l = (nil)

reversed binary: 111001111110
binary: 011111100111
octal len: 4
cur res: 
i: 12
111 - 7
cur res: 7
i: 9
100 - 4
cur res: 74
i: 6
111 - 7
cur res: 747
i: 3
011 - 3
cur res: 7473
res: 3747
octal: 3747

size of octal: 4


out algorithm took 0.000007 seconds to execute 
